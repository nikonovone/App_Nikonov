# Run this app with `python app.py` and
# visit http://127.0.0.1:8050/ in your web browser.

# –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫
import pandas as pd
import numpy as np
import plotly.express as px

from dash import Dash, dcc, html
from utils import *
from functools import partialmethod
from scipy.stats import mstats

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫ Pandas
pd.DataFrame.head = partialmethod(pd.DataFrame.head, n=2)
pd.options.display.max_rows = 13
pd.options.display.max_columns = 20

app = Dash(__name__)
server = app.server
# –ß—Ç–µ–Ω–∏–µ –¥–∞—Ç–∞—Å–µ—Ç–∞
df = pd.read_csv("https://media.githubusercontent.com/media/nikonovone/App_Nikonov/master/data.csv", index_col=0)
#df = pd.read_csv("data.csv", index_col=0)

font = dict(
    family="Gotham Pro Medium",
    size=12,
)


# –í–∏–∑—É–∞–ª–∏–∑–∏—Ä—É–µ–º –¢–æ–ø-10 –≤–∞–∫–∞–Ω—Å–∏–π
data = df['vacancy_custom_position'].value_counts()[:10]
top10 = px.bar(df, x=data.index, y=data, color_discrete_sequence=['#6189c9'])
top10.update_xaxes(tickangle=0)
top10.update_layout(
    xaxis=dict(
        tickfont=dict(size=6)))
top10.update_layout(
    title='–¢–æ–ø 10 —Å–∞–º—ã—Ö –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –≤–∞–∫–∞–Ω—Å–∏–π',
    xaxis_title="–ù–∞–∑–≤–∞–Ω–∏–µ –≤–∞–∫–∞–Ω—Å–∏–π",
    yaxis_title="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ, —à—Ç",
    font=font
)

# –ú–∏–Ω. –∑–∞—Ä–ø–ª–∞—Ç–∞
df['vacancy_salary_from'] = df['vacancy_salary_from'].replace(-1, 0)
data = pd.Series(mstats.winsorize(
    df[df['vacancy_salary_from'] != 0]['vacancy_salary_from'], limits=[0, 0.05]))
min_salary = px.histogram(df, x=data, marginal="box", color_discrete_sequence=['#6189c9'])
min_salary.update_layout(
    title='–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π –∑–∞—Ä–ø–ª–∞—Ç—ã –≤ 95% –≤–∞–∫–∞–Ω—Å–∏–π',
    xaxis_title="–ó–∞—Ä–ø–ª–∞—Ç–∞, —Ä—É–±",
    yaxis_title="–í–∞–∫–∞–Ω—Å–∏–∏, —à—Ç",
    font=font,
)

# –ú–∞–∫—Å. –∑–∞—Ä–ø–ª–∞—Ç–∞
df['vacancy_salary_to'] = df['vacancy_salary_to'].replace(-1, np.nan)
data = pd.Series(mstats.winsorize(
    df['vacancy_salary_to'].dropna(), limits=[0, 0.05]))
max_salary = px.histogram(x=data, marginal="box",  color_discrete_sequence=['#6189c9'])
max_salary.update_layout(
    title='–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –∑–∞—Ä–ø–ª–∞—Ç—ã –≤ 95% –≤–∞–∫–∞–Ω—Å–∏–π',
    xaxis_title="–ó–∞—Ä–ø–ª–∞—Ç–∞, —Ä—É–±",
    yaxis_title="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ, —à—Ç",
    font=font
)
# –û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ
data = df['vacancy_offer_education_id']
education_cat = px.histogram(x=data, marginal="box", color_discrete_sequence=['#6189c9'])
education_cat.update_layout(
    title='–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –≤ –≤–∞–∫–∞–Ω—Å–∏—è—Ö',
    xaxis_title="–ö–∞—Ç–µ–≥–æ—Ä–∏–∏",
    yaxis_title="–í–∞–∫–∞–Ω—Å–∏–∏, —à—Ç",
    font=font
)

y = pd.Series(mstats.winsorize(df['vacancy_salary_from'], limits=[0, 0.05]))
education_bar = px.box(y=y, x=df['vacancy_offer_education_id'], color_discrete_sequence=['#6189c9'])
education_bar.update_layout(
    title='–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π –∑–∞—Ä–ø–ª–∞—Ç—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è',
    xaxis_title="–ö–∞—Ç–µ–≥–æ—Ä–∏—è –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è",
    yaxis_title="–ó–∞—Ä–ø–ª–∞—Ç–∞, —Ä—É–±",
    font=font
)
# –û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã
df['vacancy_offer_experience_year_count'].replace(
    [-1, -100], np.nan, inplace=True)
data = df['vacancy_offer_experience_year_count']
offer_experience = px.histogram(x=data, marginal="box",  color_discrete_sequence=['#6189c9'])
offer_experience.update_layout(
    title='–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç—Ä–µ–±—É–µ–º–æ–≥–æ –æ–ø—ã—Ç–∞ —Ä–∞–±–æ—Ç—ã –≤ –≤–∞–∫–∞–Ω—Å–∏—è—Ö',
    yaxis_title="–í–∞–∫–∞–Ω—Å–∏–∏, —à—Ç",
    xaxis=dict(
        tickmode='linear',
        title="–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã, –ª–µ—Ç",
    ),
    font=font
)

offer_experience_bar = px.box(y=y, x=df['vacancy_offer_experience_year_count'], color_discrete_sequence=['#6189c9'])
offer_experience_bar.update_layout(
    title='–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π –∑–∞—Ä–ø–ª–∞—Ç—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –æ–ø—ã—Ç–∞ —Ä–∞–±–æ—Ç—ã',
    xaxis_title="–ö–∞—Ç–µ–≥–æ—Ä–∏—è –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è",
    yaxis_title="–ó–∞—Ä–ø–ª–∞—Ç–∞, —Ä—É–±",
    font=font
)
# –ì—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã
shedule = px.box(y=y, x=df['vacancy_operating_schedule_id'], color_discrete_sequence=['#6189c9'])
shedule.update_layout(
    title='–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π –∑–∞—Ä–ø–ª–∞—Ç—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≥—Ä–∞—Ñ–∏–∫–∞ —Ä–∞–±–æ—Ç—ã',
    xaxis_title="–ì—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã",
    yaxis_title="–ó–∞—Ä–ø–ª–∞—Ç–∞, —Ä—É–±",
    font=font
)
# –ì–æ—Ä–æ–¥–∞
data = pd.Series(mstats.winsorize(df['vacancy_city_id'], limits=[0, 0.05]))
cities = px.histogram(x=data, marginal="box",  color_discrete_sequence=['#6189c9'])
cities.update_layout(
    title='–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ id –≥–æ—Ä–æ–¥–æ–≤ –≤ 95% –≤–∞–∫–∞–Ω—Å–∏–π',
    xaxis_title="ID –≥–æ—Ä–æ–¥–∞",
    yaxis_title="–í–∞–∫–∞–Ω—Å–∏–∏, —à—Ç",
    font=font
)

# –ö–æ—Ä—Ä–µ–ª—è—Ü–∏—è —á–∏—Å–ª–æ–≤—ã—Ö –ø—Ä–∏–∑–Ω–∞–∫–æ–≤
corrs = df.drop(columns=['vacany_company_id', 'vacancy_is_agency',
                         'vacancy_offer_experience_year_id', 'vacancy_city_id']).corr()
correlations =  px.imshow(np.array(np.round(corrs,2)),
                text_auto=True,
                aspect="auto",
                color_continuous_scale=px.colors.sequential.Cividis,
                x=['–ó–∞—Ä–ø–ª–∞—Ç–∞ –æ—Ç', '–ó–∞—Ä–ø–ª–∞—Ç–∞ –¥–æ', '–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã', '–î–∏–∞–ø–∞–∑–æ–Ω –∑–∞—Ä–ø–ª–∞—Ç—ã', ' '],
                y=['–ó–∞—Ä–ø–ª–∞—Ç–∞ –æ—Ç', '–ó–∞—Ä–ø–ª–∞—Ç–∞ –¥–æ', '–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã', '–î–∏–∞–ø–∞–∑–æ–Ω –∑–∞—Ä–ø–ª–∞—Ç—ã',' ']
                )
correlations.update_layout(
    title='–ö–∞—Ä—Ç–∞ –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–π —á–∏—Å–ª–æ–≤—ã—Ö –ø—Ä–∏–∑–Ω–∞–∫–æ–≤',
    font=font
)


app.layout = html.Div(
    children=[
        html.Div(
            children=[
                html.P(children="üê¨", className="header-emoji"),
                html.H1(
                    children="Bimbo –∞–Ω–∞–ª–∏—Ç–∏–∫–∞",
                    className="header-title"
                ),
                html.P(
                    children="–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞—Ç–∞—Å–µ—Ç—ã —Å 1995 –≥–æ–¥–∞",
                    className="header-description",
                ),
            ],
            className="header",
        ),
        html.Div(
            children=[
                html.H1(children='–û—Å–Ω–æ–≤–Ω—ã–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö'),
                html.Div(
                    children=[
                        dcc.Graph(
                            className='graph',
                            figure=top10,
                        ),
                        html.Div( 
                            children=[
                                dcc.Markdown('''
                                        –°–∞–º—ã–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏ - –ø—Ä–æ—Å—Ç—ã–µ,
                                        –Ω–µ —Ç—Ä–µ–±—É—é—â–∏–µ –≤—ã—Å–æ–∫–∏—Ö –∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–π —É —Å–æ–∏—Å–∫–∞—Ç–µ–ª—è
                                ''')
                            ],
                            className='conclusion'
                        )
                    ],
                    className="card",
                ),
                html.Div(
                    children=[
                        dcc.Graph(
                            className='graph',
                            figure=shedule,
                        ),
                        html.Div( 
                            children=[
                                dcc.Markdown('''
                                        –ö–∞–∫ –≤–∏–¥–Ω–æ –≤ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ 7 –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å –æ—Å—Ç–∞–ª—å–Ω—ã–º–∏ - –æ—Ç –≥—Ä–∞—Ñ–∏–∫–∞
                                        —Ä–∞–±–æ—Ç—ã —Å—É—â–µ—Å—Ç–≤–µ–Ω–Ω–æ –º–µ–Ω—è–µ—Ç—Å—è –º–µ–¥–∏–∞–Ω–Ω–∞—è –∑–∞—Ä–ø–ª–∞—Ç–∞
                                        –û—Ç–º–µ—Ç–∏–º, —á—Ç–æ 1 –∏ 3 –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≥—Ä–∞—Ñ–∏–∫–∞ —Ä–∞–±–æ—Ç—ã —Å–æ—Å—Ç–∞–≤–ª—è—é—Ç **70%** –≤—Å–µ—Ö –≤–∞–∫–∞–Ω—Å–∏–π –≤ –¥–∞—Ç–∞—Å–µ—Ç–µ
                                ''')
                            ],
                            className='conclusion'
                        )
                    ],
                    className="card",
                ),
                html.Div(
                    children=[
                        dcc.Graph(
                            className='graph',
                            figure=min_salary,
                        ),
                        html.Div( 
                            children=[
                                dcc.Markdown('''
                                        –°—Ç–æ–∏—Ç –æ—Ç–º–µ—Ç–∏—Ç—å –ø—Ä–∏–≤—è–∑–∫—É –ø–∏–∫–æ–≤ –∫ –∫—Ä—É–≥–ª—ã–º —Å—É–º–º–∞–º -
                                        30, 35, 40, 45 —Ç—ã—Å—è—á —Ä—É–±–ª–µ–π –∏ —Ç.–¥.
                                        –ú–µ–¥–∏–∞–Ω–Ω–æ–π –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π –∑–∞—Ä–ø–ª–∞—Ç–æ–π –≤ 95% –≤–∞–∫–∞–Ω—Å–∏–π
                                        —è–≤–ª—è–µ—Ç—Å—è **40 000** —Ä—É–±–ª–µ–π

                                ''')
                            ],
                            className='conclusion'
                        )
                    ],
                    className="card",
                ),
                html.Div(
                    children=[
                        dcc.Graph(
                            className='graph',
                            figure=max_salary,
                        ),
                        html.Div( 
                            children=[
                                dcc.Markdown('''
                                        –ú–µ–¥–∏–∞–Ω–Ω–æ–π –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –∑–∞—Ä–ø–ª–∞—Ç–æ–π –≤ 95% –≤–∞–∫–∞–Ω—Å–∏–π
                                        —è–≤–ª—è–µ—Ç—Å—è **55 000** —Ä—É–±–ª–µ–π

                                ''')
                            ],
                            className='conclusion'
                        )
                    ],
                    className="card",
                ),
                html.Div(
                    children=[
                        dcc.Graph(
                            className='graph',
                            figure=education_bar,
                        ),
                        html.Div( 
                            children=[
                                dcc.Markdown('''
                                        –í –¥–∞–Ω–Ω–æ–º –¥–∞—Ç–∞—Å–µ—Ç–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –Ω–µ –æ–∫–∞–∑—ã–≤–∞–µ—Ç
                                        –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ–µ –≤–ª–∏—è–Ω–∏–µ –Ω–∞ –∑–∞—Ä–ø–ª–∞—Ç—É

                                ''')
                            ],
                            className='conclusion'
                        )
                    ],
                    className="card",
                ),
                html.Div(
                    children=[
                        dcc.Graph(
                            className='graph',
                            figure=education_cat,
                        ),
                        html.Div( 
                            children=[
                                dcc.Markdown('''
                                       –í –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–µ –≤–∞–∫–∞–Ω—Å–∏–π —Ç—Ä–µ–±—É–µ—Ç—Å—è –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ
                                    –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "0"

                                ''')
                            ],
                            className='conclusion'
                        )
                    ],
                    className="card",
                ),
                html.Div(
                    children=[
                        dcc.Graph(
                            className='graph',
                            figure=offer_experience_bar,
                        ),
                        html.Div( 
                            children=[
                                dcc.Markdown('''
                                        –ú–æ–∂–Ω–æ –≤—ã–¥–µ–ª–∏—Ç—å –ª–∏–Ω–µ–π–Ω—É—é –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –æ—Ç 1 –¥–æ 4 –ª–µ—Ç –æ–ø—ã—Ç–∞
                                        —Ä–∞–±–æ—Ç—ã, –ø–æ—Ç–æ–º –Ω–∞–±–ª—é–¥–∞–µ—Ç—Å—è –ø–ª–∞—Ç–æ –ø–æ –∏–∑–º–µ–Ω–µ–Ω–∏—é –∑–∞—Ä–ø–ª–∞—Ç—ã,
                                        –≤–µ—Ä–æ—è—Ç–Ω–æ —Ç–∞–∫–æ–π –≥—Ä–∞—Ñ–∏–∫ –º–æ–∂–Ω–æ –æ–±—ä—è—Å–Ω–∏—Ç—å –∏—Å–∫–∞–∂–µ–Ω–Ω—ã–º–∏
                                        –∏ –Ω–µ –æ—á–∏—â–µ–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏

                                ''')
                            ],
                            className='conclusion'
                        )
                    ],
                    className="card",
                ),
                html.Div(
                    children=[
                        dcc.Graph(
                            className='graph',
                            figure=offer_experience,
                        ),
                        html.Div( 
                            children=[
                                dcc.Markdown('''
                                        –ú–µ–¥–∏–∞–Ω–Ω—ã–π –æ–ø—ã—Ç —Ä–∞–±–æ—Ç—ã —Ç—Ä–µ–±—É–µ–º—ã–π –≤ –≤–∞–∫–∞–Ω—Å–∏—è—Ö -
                                        **1** –≥–æ–¥. –¢–∞–∫–∂–µ –∑–∞–º–µ—Ç–µ–Ω –ø–∏–∫ –Ω–∞ –∑–Ω–∞—á–µ–Ω–∏–∏ 3 –≥–æ–¥–∞, —á—Ç–æ
                                        –º–æ–∂–µ—Ç –æ–±—ä—è—Å–Ω—è—Ç—å—Å—è —Å–ø—Ä–æ—Å–æ–º –Ω–∞ –æ–ø—ã—Ç–Ω—ã—Ö —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤

                                ''')
                            ],
                            className='conclusion'
                        )
                    ],
                    className="card",
                ),
                
                html.Div(
                    children=[
                        dcc.Graph(
                            className='graph',
                            figure=cities,
                        ),
                        html.Div( 
                            children=[
                                dcc.Markdown('''
                                        –ù–∞ –≥—Ä–∞—Ñ–∏–∫–µ –≤–∏–¥–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–∏–∫–æ–≤, –≤–µ—Ä–æ—è—Ç–Ω–æ —ç—Ç–æ
                                        **–ú–æ—Å–∫–≤–∞**, **–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä**–≥ –∏ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –≥–æ—Ä–æ–¥–∞ 
                                        –º–∏–ª–ª–∏–æ–Ω–Ω–∏–∫–∏, –≤ –∫–æ—Ç–æ—Ä—ã—Ö —Å–æ—Å—Ä–µ–¥–æ—Ç–æ—á–µ–Ω–∞ –±–æ–ª—å—à–∞—è —á–∞—Å—Ç—å 
                                        –≤–∞–∫–∞–Ω—Å–∏–π. –°—É–º–º–∞ 1, 2, 57, 4, 35 –∫–∞—Ç–µ–≥–æ—Ä–∏–π –≥–æ—Ä–æ–¥–æ–≤ –∏–º–µ–µ—Ç **69%**
                                        –æ—Ç –æ–±—â–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –≤–∞–∫–∞–Ω—Å–∏–π.

                                ''')
                            ],
                            className='conclusion'
                        )
                    ],
                    className="card",
                ),
                html.Div(
                    children=[
                        dcc.Graph(
                            className='graph',
                            figure=correlations,
                        ),
                        html.Div( 
                            children=[
                                dcc.Markdown('''
                                        –Ø–≤–Ω—ã—Ö –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–æ–Ω–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –Ω–µ—Ç,
                                        –∫—Ä–æ–º–µ –∑–∞—Ä–ø–ª–∞—Ç—ã –æ—Ç –∏ –¥–æ, —á—Ç–æ –ª–æ–≥–∏—á–Ω–æ.

                                ''')
                            ],
                            className='conclusion'
                        )
                    ],
                    className="card",
                )
            ],
            className="graphs",
        ),
    ]
)




if __name__ == '__main__':
    app.run_server(debug=True)
